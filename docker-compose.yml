services:
   kafka:
      image: confluentinc/cp-kafka:7.4.0
      depends_on:
         - zookeeper
      ports:
         - "9092:9092"
      environment:
         KAFKA_BROKER_ID: 1
         KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
         KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
         KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
         KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
         KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

   zookeeper:
      image: confluentinc/cp-zookeeper:7.4.0
      ports:
         - "2181:2181"
      environment:
         ZOOKEEPER_CLIENT_PORT: 2181
         ZOOKEEPER_TICK_TIME: 2000

   redis:
      image: redis:7-alpine
      ports:
         - "6379:6379"
      volumes:
         - redis_data:/data
      command: redis-server --appendonly yes

   java-spring-notification-service:
      build:
         context: ./java-spring-notification-service
         dockerfile: Dockerfile
      environment:
         - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/${DB_NAME}
         - SPRING_DATASOURCE_USERNAME=${DB_USER}
         - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
         - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
         - REDIS_HOST=redis
      ports:
         - "50052:50052"
      extra_hosts:
         - "host.docker.internal:host-gateway"
      depends_on:
         - kafka
         - redis

   python-fastapi-stock-service:
      build:
         context: ./python-fastapi-stock-service
         dockerfile: Dockerfile
      environment:
         - DB_HOST=${DB_URL}
         - DB_USER=${DB_USER}
         - DB_PASSWORD=${DB_PASSWORD}
         - DB_NAME=stock_pulse_db
         - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      ports:
         - "8000:8000"
      extra_hosts:
         - "host.docker.internal:host-gateway"
      depends_on:
         - kafka

volumes:
   redis_data: